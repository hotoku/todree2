/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/info": {
    /** Info */
    get: operations["info_api_info_get"];
  };
  "/api/items/{item_id}": {
    /** Get Item */
    get: operations["get_item_api_items__item_id__get"];
    /** Update Item */
    put: operations["update_item_api_items__item_id__put"];
    /** Delete Item */
    delete: operations["delete_item_api_items__item_id__delete"];
  };
  "/api/items": {
    /**
     * Get Items
     * @description Return all items that have no parent.
     */
    get: operations["get_items_api_items_get"];
    /** Create Item */
    post: operations["create_item_api_items_post"];
  };
  "/{path}": {
    /** Index */
    get: operations["index__path__get"];
  };
  "/": {
    /** Index */
    get: operations["index__get"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /** Item */
    Item: {
      /** Content */
      content: string;
      /** Parent Id */
      parent_id?: number | null;
      /** Position */
      position: number;
      /** Id */
      id: number;
    };
    /** ItemCreate */
    ItemCreate: {
      /** Content */
      content: string;
      /** Parent Id */
      parent_id?: number | null;
      /** Position */
      position: number;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Info */
  info_api_info_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /** Get Item */
  get_item_api_items__item_id__get: {
    parameters: {
      path: {
        item_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Item"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Item */
  update_item_api_items__item_id__put: {
    parameters: {
      path: {
        item_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ItemCreate"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Item"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Item */
  delete_item_api_items__item_id__delete: {
    parameters: {
      path: {
        item_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Item"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Get Items
   * @description Return all items that have no parent.
   */
  get_items_api_items_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Item"][];
        };
      };
    };
  };
  /** Create Item */
  create_item_api_items_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ItemCreate"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Item"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Index */
  index__path__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /** Index */
  index__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
}
